?install.packages
knitr::opts_chunk$set(echo = TRUE)
Six <- 6
test <- c(1,2,3)
typeof(test)
?c
?c()
sqrt(16)
sqrt(16)
?sqrt
?c
seq(16)
seq(5)
seq(5, by = 0.5)
?round
test <- c(1, "blue")
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender)
library(NHANES)
library(RNHANES)
library(dplyr)
# proportions representing a simple random sample
prop <- as.numeric(table(NHANES$Race1)/nrow(NHANES))
set.seed(1000) # reproducible
# take sample from NHANESraw that represents a simple random sample
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender) %>%
select(ID)
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender)
View(dat)
library(NHANES)
library(RNHANES)
library(dplyr)
# proportions representing a simple random sample
prop <- as.numeric(table(NHANES$Race1)/nrow(NHANES))
set.seed(1000) # reproducible
# take sample from NHANESraw that represents a simple random sample
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender) %>%
select(ID, Sex, Age, Height, Weight)
View(dat)
# take sample from NHANESraw that represents a simple random sample
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender) %>%
select(ID, Sex, Age, Height, Weight) %>%
select(-Race1)
View(dat)
?group_by
# take sample from NHANESraw that represents a simple random sample
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender) %>%
ungroup(Race1) %>%
select(ID, Sex, Age, Height, Weight)
write.csv(dat, "data/NHANES.csv")
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("data/NHANES.csv")
library(readr)
healthData <- read_csv("data/NHANES.csv")
setwd(../)
setwd("../")
healthData <- read_csv("data/NHANES.csv")
?knitr::knit
opts_knit$set(root.dir = "../")
knitr::opts_knit$set(root.dir = "../")
healthData <- read_csv("data/NHANES.csv")
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("../data/NHANES.csv")
View(healthData)
?read_csv
# take sample from NHANESraw that represents a simple random sample
dat <- NHANESraw %>%
# add sample weights
mutate(weight = case_when(Race1 == "Black" ~ prop[1],
Race1 == "Hispanic" ~ prop[2],
Race1 == "Mexican" ~ prop[3],
Race1 == "White" ~ prop[4],
Race1 == "Other" ~ prop[5])) %>%
group_by(Race1) %>%
sample_n(10000 * weight) %>% # sample from each according to prop to obtain 10000 obvs in total
rename(Sex = Gender) %>%
ungroup(Race1) %>%
select(ID, Sex, Age, Height, Weight)
View(dat)
write_csv(dat, "data/NHANES.csv")
write_csv(dat, "data/NHANES.csv")
healthData <- read_csv("../data/NHANES.csv")
View(healthData)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("../data/NHANES.csv")
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("../data/NHANES.csv")
library(readr)
healthData <- read_csv("../data/NHANES.csv")
healthData
head(healthData)
str(healthData)
summary(healthData)
?data.frame
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("../data/NHANES.csv")
library(readr)
healthData <- read_csv("../data/NHANES.csv")
healthData
head(healthData)
view(healthData)
View(healthData)
str(healthData)
glimpse(healthData)
library(dplyr)
library(tidyr)
glimpse(healthData)
summary(healthData)
healthData
str(healthData)
head(healthData)
summary(healthData)
View(healthData)
summary(healthData)
library(ggplot2)
ggplot(healthData, aes(x = Sex, y = Weight)) + geom_boxplot
ggplot(healthData, aes(x = Sex, y = Weight)) + geom_boxplot()
lm(Weight ~ Sex, data = healthData)
jtools::summ(lm(Weight ~ Sex, data = healthData))
healthData %>% count(Sex)
head(healthData)
install.packages("forcas")
install.packages("forcats")
healthData %>% forcats::as_factor(Sex) %>% head()
healthData %>% mutate(Sex = forcats::as_factor(Sex)) %>% head()
healthData %>% mutate(Sex = forcats::as_factor(Sex)) %>% summary()
summary(healthData)
iris
tibble(iris)
?iris
summary(healthData)
str(healthData)
dim(healthData)
nrow(healthData)
ncol(healthData)
knitr::opts_chunk$set(echo = TRUE)
flowerData <- read_csv("../data/iris.csv")
library(readr)
flowerData <- read_csv("../data/iris.csv")
summary(flowerData)
??filter
filter(healthData, Sex = "female")
healthData <- read_csv("../data/NHANES.csv")
filter(healthData, Sex = "female")
View(healthData)
filter(healthData, Sex == "female")
?filter
library(dplyr)
filter(healthData, Sex = "female")
filter(healthData, Sex == "female")
filter(healthData, height < 170)
View(healthData)
filter(healthData, Height < 170)
select(healthData, c(ID, Height))
noWeight <- select(healthData, -c(Weight))
noWeightFemale <- select(noWeight, Sex == "female") #note the use of noWeight, rather than healthData, in this command
knitr::opts_chunk$set(echo = TRUE)
flowerData <- read_csv("../data/iris.csv")
library(readr)
flowerData <- read_csv("../data/iris.csv")
View(flowerData)
summary(flowerData)
View(flowerData)
smallSetosa <- flowerData %>%
select(variety == "Setosa") %>%
filter(sepal.length < 5.8)
library(dplyr)
smallSetosa <- flowerData %>%
select(variety == "Setosa") %>%
filter(sepal.length < 5.8)
View(flowerData)
smallSetosa <- flowerData %>%
filter(variety == "Setosa") %>%
select(c(sepal.length, sepal.width))
knitr::opts_chunk$set(echo = TRUE)
healthData <- read_csv("../data/NHANES.csv")
library(readr)
healthData
healthData <- read_csv("../data/NHANES.csv")
View(healthData)
healthDataBMI <- healthData %>%
mutate(BMI = Weight/(Height)^2)
library(dplyr)
healthDataBMI <- healthData %>%
mutate(BMI = Weight/(Height)^2)
head(healthDataBMI)
library(forcats)
?as_factor
